version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - '6379:6379'
    networks:
      - app-network
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 200mb --maxmemory-policy noeviction
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: elasticsearch
    ports:
      - '9200:9200'
    networks:
      - app-network
    environment:
      - node.name=elasticsearch
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - logger.level=error
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    container_name: kibana
    ports:
      - '5601:5601'
    networks:
      - app-network
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS:-http://elasticsearch:9200}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    depends_on:
      - elasticsearch
    restart: unless-stopped

  filebeat:
    build:
      context: ./filebeat
      dockerfile: Dockerfile
    container_name: filebeat
    user: root
    environment:
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    env_file: .env
    volumes:
      - ./nestjs-log/logs:/src/log:ro
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    depends_on:
      - elasticsearch
    networks:
      - app-network
    command: filebeat -e -strict.perms=false -E output.elasticsearch.password=${ELASTICSEARCH_PASSWORD} -E output.elasticsearch.username=${ELASTICSEARCH_USERNAME}
    restart: unless-stopped

  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    ports:
      - '8001:8000'
    volumes:
      - chromadb_data:/chroma/index
    networks:
      - app-network
    restart: always

  # backend-fastapi:
  #   build:
  #     context: ./fastapi-ai
  #     dockerfile: Dockerfile
  #   container_name: backend_fastapi
  #   ports:
  #     - '8000:8000'
  #   depends_on:
  #     - chromadb
  #   networks:
  #     - app-network
  #   env_file:
  #     - .env

  # backend-nestjs:
  #   container_name: backend_nestjs
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   environment:
  #     # Database
  #     DATABASE_HOST: ${DATABASE_HOST:-postgres}
  #     DATABASE_PORT: ${DATABASE_PORT:-5432}
  #     DATABASE_USERNAME: ${DATABASE_USERNAME}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     DATABASE_NAME: ${DATABASE_NAME}
  #     # Redis
  #     REDIS_HOST: ${REDIS_HOST:-redis}
  #     REDIS_PORT: ${REDIS_PORT:-6379}
  #     REDIS_PASSWORD: ${REDIS_PASSWORD}
  #     REDIS_DB: ${REDIS_DB}
  #     # BullMQ
  #     BULLMQ_HOST: ${BULLMQ_HOST:-redis}
  #     BULLMQ_PORT: ${BULLMQ_PORT:-6379}
  #     BULLMQ_PASSWORD: ${BULLMQ_PASSWORD}
  #     BULLMQ_DB: ${BULLMQ_DB}
  #     # Elasticsearch
  #     ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_HOSTS:-http://elasticsearch:9200}
  #     ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME:-elastic}
  #     ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
  #     # Other
  #     JWT_ACCESS_EXPIRE: ${JWT_ACCESS_EXPIRE}
  #     JWT_REFRESH_EXPIRE: ${JWT_REFRESH_EXPIRE}
  #     JWT_REFRESH_EXPIRE_DAY: ${JWT_REFRESH_EXPIRE_DAY}
  #     THROTTLE_TTL: ${THROTTLE_TTL}
  #     THROTTLE_LIMIT: ${THROTTLE_LIMIT}
  #     MAIL_HOST: ${MAIL_HOST}
  #     MAIL_USER: ${MAIL_USER}
  #     MAIL_PASSWORD: ${MAIL_PASSWORD}
  #     NODE_ENV: ${NODE_ENV:-development}
  #     PORT: ${PORT:-3000}
  #   ports:
  #     - '${PORT:-3000}:${PORT:-3000}'
  #   env_file: .env
  #   depends_on:
  #     - elasticsearch
  #     - postgres
  #     - redis
  #   dns:
  #     - 8.8.8.8
  #     - 8.8.4.4
  #   volumes:
  #     - .:/usr/src/app:cached
  #     - /usr/src/app/node_modules
  #     - ./nestjs-log/logs:/usr/src/app/logs
  #   networks:
  #     - app-network
  #   restart: unless-stopped

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  chromadb_data:
  postgres_data:
  redis_data:
  esdata:
