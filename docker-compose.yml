version: '3.8'

services:
  # Database
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: tuanthanh
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: social-network-SNet
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  # Redis
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - '6379:6379'
    networks:
      - app-network
    environment:
      - REDIS_PASSWORD=123456
      - REDIS_DB=0
    volumes:
      - redis_data:/data
    command: redis-server --requirepass 123456 --maxmemory 200mb --maxmemory-policy noeviction
    restart: unless-stopped

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: elasticsearch
    ports:
      - '9200:9200'
    networks:
      - app-network
    environment:
      - node.name=elasticsearch
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - logger.level=error
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 4GB
    volumes:
      - esdata:/usr/share/elasticsearch/data

  # ChromaDB - Vector Database
  # chromadb:
  #   image: ghcr.io/chroma-core/chroma:latest
  #   container_name: chromadb
  #   ports:
  #     - '8001:8000'
  #   volumes:
  #     - chroma_data:/chroma/index
  #   networks:
  #     - app-network
  #   restart: unless-stopped

  # FastAPI Backend (ML & Embedding Service)
  # model-ai:
  #   container_name: model-ai
  #   build:
  #     context: ./model-ai
  #     dockerfile: Dockerfile
  #   environment:
  #     - CHROMADB_HOST=chromadb
  #     - CHROMADB_PORT=8000
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_USER=tuanthanh
  #     - POSTGRES_PASSWORD=123456
  #     - POSTGRES_DB=social-network-SNet
  #   ports:
  #     - '8000:8000'
  #   depends_on:
  #     - postgres
  #     - chromadb
  #   networks:
  #     - app-network
  #   restart: unless-stopped

  # Backend (NestJS API Gateway)
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      # Database
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: tuanthanh
      DATABASE_PASSWORD: 123456
      DATABASE_NAME: social-network-SNet

      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: 123456
      REDIS_DB: 0

      # BullMQ
      BULLMQ_HOST: redis
      BULLMQ_PORT: 6379
      BULLMQ_PASSWORD: 123456
      BULLMQ_DB: 1

      # Elasticsearch
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: tuanthanh
      ELASTICSEARCH_PASSWOR: '123456'

      # FastAPI ML Service
      # MODEL_AI: http://model-ai:8000

      # Server
      NODE_ENV: development
      PORT: 3000
    ports:
      - '3000:3000'
    depends_on:
      - postgres
      - redis
      # - model-ai
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - .:/usr/src/app
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  redis_data:
  esdata:
  # chroma_data:
